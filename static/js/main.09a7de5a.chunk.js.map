{"version":3,"sources":["services/localStorage.js","redux/actions/index.js","pages/Login.js","pages/Settings.js","components/Interval.js","components/Questions.js","services/helpers.js","pages/GamePage.js","pages/Feedback.js","pages/Ranking.js","App.js","serviceWorker.js","redux/reducers/player.js","redux/reducers/token.js","redux/reducers/timer.js","redux/reducers/answer.js","redux/reducers/index.js","redux/store/index.js","index.js","trivia.png","assets/bip.mp3"],"names":["saveLocalStorage","local","itemTosave","localStorage","setItem","JSON","stringify","getLocalStorage","localName","parse","getItem","login","state","type","getPlayer","stopTimer","answerDisabled","nextBtn","resetScore","fetchTokenApi","fetch","response","json","token","Login","email","userName","validadeEmailAndUserName","length","handlePlayClick","fetchApiQuestions","hasEmail","md5","toString","gravatar","handleChange","target","name","value","setState","this","props","history","className","src","logo","alt","placeholder","data-testid","required","onChange","id","onClick","push","disabled","to","React","Component","connect","dispatch","data","response_code","Error","questions","newToken","requestQuestions","fetchQuestionsApi","Settings","Interval","time","handleTime","setInterval","prevState","audio","Audio","sound","play","stopTimerAction","setNext","interval","setDisabled","setTimer","pause","clearInterval","stop","restartTimeFunction","maxValue","text","String","background","styles","buildStyles","backgroundColor","pathColor","textColor","trailColor","textSize","ToRender","PropTypes","bool","func","timer","setTime","Questions","oneOfType","object","isRequired","number","string","loading","index","renderTimer","callStopTimer","restartTimer","quest","answers","incorrect_answers","correct_answer","sort","incorrects","map","answer","key","handleAnswerClick","indexOf","results","category","question","clean","sanitizeHTML","secondClean","dangerouslySetInnerHTML","__html","getMultipleAnswers","getBollAnswers","error","score","assertions","countScoreAction","urlGravatar","callDisabledDispatch","callNextBtnDispatch","informations","timerStorage","difficulty","checkScore","savedRanking","rankingToSave","a","b","saveRankingStorage","picture","handleNextClick","next","render","questionToRender","renderNextBtn","player","gravatarEmail","countScore","GamePage","d","Feedback","resetScoreFeedback","resetScoreAction","imgGravatar","Ranking","ranking","item","indice","App","exact","path","component","Boolean","window","location","hostname","match","INITIAL_STATE","playerReducer","action","tokenReducer","timeReducer","answerReducer","reducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","Cypress","ReactDOM","basename","process","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.09a7de5a.chunk.js","sourcesContent":["export const saveLocalStorage = (local, itemTosave) => localStorage\n  .setItem(local, JSON.stringify(itemTosave));\n\nexport const getLocalStorage = (localName) => JSON.parse(localStorage.getItem(localName));\n\nexport const saveRankingStorage = (itemTosave) => {\n  const savedRanking = JSON.parse(localStorage.getItem('ranking'));\n  if (savedRanking === null) {\n    localStorage.setItem('ranking', JSON.stringify([itemTosave]));\n  } else {\n    const rankingToSave = [...savedRanking, itemTosave];\n    rankingToSave.sort((a, b) => {\n      const NEGATIVE_ONE = -1;\n      if (a.score > b.score) return NEGATIVE_ONE;\n      if (a.score < b.score) return 1;\n      return 0;\n    });\n    localStorage.setItem('ranking', JSON.stringify(rankingToSave));\n  }\n};\n","import { saveLocalStorage } from '../../services/localStorage';\n\nexport const USER_TOKEN = 'USER_TOKEN';\nexport const login = (state) => ({ type: USER_TOKEN, state });\nexport const getPlayer = (state) => ({ type: 'GET_PLAYER', state });\nexport const stopTimer = (state) => ({ type: 'STOP_TIME', state });\nexport const renderTimer = (state) => ({ type: 'RENDER_TIME', state });\nexport const answerDisabled = (state) => ({ type: 'ANSWER_DISABLED', state });\nexport const nextBtn = (state) => ({ type: 'CHANGE_NEXT', state });\nexport const setTime = (state) => ({ type: 'SET_TIME', state });\nexport const countScore = (state) => ({ type: 'SET_SCORE', state });\nexport const resetScore = (state) => ({ type: 'RESET_SCORE', state });\nconst fetchTokenApi = async () => {\n  try {\n    const url = 'https://opentdb.com/api_token.php?command=request';\n    const response = await fetch(url);\n    const token = await response.json();\n    saveLocalStorage('token', token);\n    return token.token;\n  } catch (error) {\n    return error;\n  }\n};\n\nexport function fetchQuestionsApi(state) {\n  return async (dispatch) => {\n    const token = await fetchTokenApi();\n    dispatch(login(token));\n    try {\n      const response = await fetch(`https://opentdb.com/api.php?amount=5&token=${token}`);\n      const data = await response.json();\n      const wrongCode = 3;\n      if (data.response_code === wrongCode) {\n        throw new Error();\n      }\n      return dispatch(getPlayer({ questions: data,\n        name: state.userName,\n        gravatar: state.gravatar,\n      }));\n    } catch (error) {\n      const newToken = await fetchTokenApi();\n      const requestQuestions = await fetch(`https://opentdb.com/api.php?amount=5&token=${newToken}`);\n      const questions = await requestQuestions.json();\n      return dispatch(getPlayer({ questions,\n        name: state.userName,\n        gravatar: state.gravatar,\n      }));\n    }\n  };\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport md5 from 'crypto-js/md5';\n// import { saveLocalStorage } from '../services/localStorage';\nimport logo from '../trivia.png';\nimport { fetchQuestionsApi } from '../redux/actions';\nimport './login.css';\n\nclass Login extends React.Component {\n    state = {\n      email: '',\n      userName: '',\n    };\n\n  validadeEmailAndUserName = () => {\n    const { email, userName } = this.state;\n    if (email.length > 0 && userName.length > 0) {\n      return false;\n    } return true;\n  }\n\n  handlePlayClick = async (fetchApiQuestions) => {\n    const { email, userName } = this.state;\n    const hasEmail = md5(email).toString();\n    const gravatar = `https://www.gravatar.com/avatar/${hasEmail}`;\n    return fetchApiQuestions({ gravatar, userName });\n  }\n\n  handleChange = ({ target }) => {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  }\n\n  render() {\n    const { history, fetchApiQuestions } = this.props;\n    const { userName, email } = this.state;\n    return (\n      <div className=\"App-header\">\n        <img src={ logo } className=\"App-logo\" alt=\"logo\" />\n        <section className=\"login-section\">\n\n          <h1>Login</h1>\n          <form>\n            <input\n              className=\"email-input\"\n              type=\"email\"\n              placeholder=\"Email\"\n              data-testid=\"input-gravatar-email\"\n              required\n              onChange={ this.handleChange }\n              value={ email }\n              name=\"email\"\n            />\n            <input\n              id=\"UserName\"\n              className=\"name-input\"\n              type=\"text\"\n              placeholder=\"Nome\"\n              data-testid=\"input-player-name\"\n              required\n              onChange={ this.handleChange }\n              value={ userName }\n              name=\"userName\"\n            />\n            <button\n              data-testid=\"btn-play\"\n              className=\"btn-play\"\n              type=\"button\"\n              onClick={ async () => {\n                await this.handlePlayClick(fetchApiQuestions);\n                history.push('/gamePage');\n              } }\n              disabled={ this.validadeEmailAndUserName() }\n            >\n              Play\n            </button>\n            <Link to=\"/settings\">\n              <button\n                data-testid=\"btn-settings\"\n                className=\"btn-settings\"\n                type=\"button\"\n              >\n                Configurações\n              </button>\n            </Link>\n          </form>\n        </section>\n\n      </div>\n    );\n  }\n}\nconst mapDispatchToProps = (dispatch) => ({\n  fetchApiQuestions: (state) => dispatch(fetchQuestionsApi(state)) });\n\nLogin.propTypes = {\n  history: PropTypes.oneOfType([PropTypes.object]).isRequired,\n  fetchApiQuestions: PropTypes.func.isRequired,\n};\n\nexport default connect(null, mapDispatchToProps)(Login);\n","import React from 'react';\nimport './settings.css';\n\nclass Settings extends React.Component {\n  render() {\n    return (\n      <div className=\"settingsPage\">\n        <p data-testid=\"settings-title\" className=\"settings\">Configurações do Jogo</p>\n      </div>\n    );\n  }\n}\nexport default Settings;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { buildStyles, CircularProgressbar } from 'react-circular-progressbar';\nimport { answerDisabled, nextBtn, setTime, stopTimer } from '../redux/actions';\nimport { saveLocalStorage } from '../services/localStorage';\nimport sound from '../assets/bip.mp3';\nimport 'react-circular-progressbar/dist/styles.css';\nimport '../pages/gamePage.css';\n\nclass Interval extends React.Component {\n  state = {\n    time: 30,\n  }\n\n  componentDidMount() {\n    const audio = new Audio(sound);\n    audio.play();\n    const { stopTimerAction, setNext } = this.props;\n    const interval = this.handleTime(audio);\n    this.setState({\n      interval,\n      audio,\n    });\n    stopTimerAction(false);\n    setNext(false);\n  }\n\n  componentDidUpdate() {\n    const { time, audio } = this.state;\n    const { setDisabled, setNext, setTimer } = this.props;\n    saveLocalStorage('timer', time);\n    setTimer(time);\n    if (time === 0) {\n      audio.pause();\n      setDisabled(true);\n      setNext(true);\n    }\n  }\n\n  componentWillUnmount() {\n    const { interval, audio } = this.state;\n    clearInterval(interval);\n    audio.pause();\n  }\n\n  handleTime = () => {\n    const seconds = 1000;\n    const intervalId = setInterval(() => {\n      this.setState((prevState) => ({\n        time: prevState.time - 1,\n      }));\n    }, seconds);\n    return intervalId;\n  }\n\n  checkTime() {\n    const { interval } = this.state;\n    const { setDisabled } = this.props;\n    clearInterval(interval);\n    return setDisabled(true);\n  }\n\n  ToRender() {\n    const { time, interval } = this.state;\n    const { stop, restartTimeFunction } = this.props;\n    return (\n      <>\n        <span\n          className=\"timer\"\n        >\n          <CircularProgressbar\n            value={ time }\n            maxValue={ 30 }\n            text={ String(time) }\n            background\n            styles={ buildStyles({\n              backgroundColor: 'white',\n              pathColor: '#7816DE',\n              textColor: 'black',\n              trailColor: '#F58A27',\n              textSize: '50px',\n            }) }\n          />\n        </span>\n        {stop === true ? clearInterval(interval) : null}\n        {time === 0 ? restartTimeFunction(false) : null}\n      </>\n\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        {this.ToRender()}\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => ({\n  stop: state.timer.stop,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  setDisabled: (state) => dispatch(answerDisabled(state)),\n  setNext: (state) => dispatch(nextBtn(state)),\n  setTimer: (state) => dispatch(setTime(state)),\n  stopTimerAction: (state) => dispatch(stopTimer(state)),\n});\nconst { bool, func } = PropTypes;\nInterval.propTypes = {\n  stop: bool.isRequired,\n  setDisabled: func.isRequired,\n  setNext: func.isRequired,\n  setTimer: func.isRequired,\n  restartTimeFunction: func.isRequired,\n  stopTimerAction: func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Interval);\n","import sanitizeHTML from 'sanitize-html';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport './questions.css';\nimport Interval from './Interval';\nimport { checkScore,\n  propTypes, mapStateToProps, mapDispatchToProps } from '../services/helpers';\n\nimport { saveRankingStorage } from '../services/localStorage';\n\nclass Questions extends React.Component {\n  state = {\n    questions: [],\n    loading: true,\n    index: 0,\n    renderTimer: true,\n  }\n\n  componentDidMount() {\n    const { questions } = this.props;\n    this.setState({ questions, loading: false });\n  }\n\n  getBollAnswers(quest) {\n    const { disabled } = this.props;\n    const answers = [...quest.incorrect_answers, quest.correct_answer].sort();\n    const incorrects = quest.incorrect_answers;\n    return answers.map((answer) => {\n      if (answer === incorrects[0]) {\n        return (\n          <button\n            type=\"button\"\n            key=\"1\"\n            data-testid=\"wrong-answer-0\"\n            onClick={ () => {\n              this.handleAnswerClick('wrong');\n            } }\n            className=\"answerBtn\"\n            disabled={ disabled }\n          >\n            {answer}\n          </button>);\n      }\n      return (\n        <button\n          type=\"button\"\n          key=\"0\"\n          data-testid=\"correct-answer\"\n          onClick={ () => {\n            this.handleAnswerClick('rigth');\n          } }\n          className=\"btn_Answer\"\n          disabled={ disabled }\n        >\n          {answer}\n        </button>);\n    });\n  }\n\n  getMultipleAnswers(quest) {\n    const { disabled } = this.props;\n    const answers = [...quest.incorrect_answers, quest.correct_answer]\n      .sort();\n    const incorrects = quest.incorrect_answers;\n    return answers.map((answer) => {\n      if (answer === quest.correct_answer) {\n        return (\n          <button\n            key=\"4\"\n            type=\"button\"\n            data-testid=\"correct-answer\"\n            onClick={ () => {\n              this.handleAnswerClick('rigth');\n            } }\n            className=\"btn_Answer\"\n            disabled={ disabled }\n          >\n            {answer}\n          </button>);\n      }\n      const index = incorrects.indexOf(answer, [0]);\n\n      return (\n        <button\n          type=\"button\"\n          key={ index }\n          data-testid={ `wrong-answer-${index}` }\n          className=\"answerBtn\"\n          onClick={ () => {\n            this.handleAnswerClick('wrong');\n          } }\n          disabled={ disabled }\n        >\n          {answer}\n        </button>\n      );\n    });\n  }\n\ncallStopTimer = () => {\n  const { stopTimerAction } = this.props;\n  return stopTimerAction(true);\n}\n\nrestartTimer = (value) => {\n  this.setState({\n    renderTimer: value,\n  });\n};\n\nquestionToRender() {\n  const { questions, index } = this.state;\n  const { history } = this.props;\n  try {\n    const { results } = questions;\n    const quest = results[index];\n    const { type, category, question } = quest;\n    const clean = sanitizeHTML(question);\n    const secondClean = sanitizeHTML(category);\n    return (\n      <>\n        <p\n          data-testid=\"question-category\"\n          dangerouslySetInnerHTML={ { __html: secondClean } }\n        >\n          {secondClean.category}\n        </p>\n        <p\n          data-testid=\"question-text\"\n          dangerouslySetInnerHTML={ { __html: clean } }\n        >\n          {clean.question}\n        </p>\n        <div className=\"answers-div\" data-testid=\"answer-options\">\n          {type === 'multiple'\n            ? this.getMultipleAnswers(quest)\n            : this.getBollAnswers(quest)}\n        </div>\n      </>\n    );\n  } catch (error) {\n    history.push('/');\n  }\n}\n\ncallDisabledDispatch(value) {\n  const { setDisabled } = this.props;\n  return setDisabled(value);\n}\n\ncallNextBtnDispatch(value) {\n  const { setNext } = this.props;\n  return setNext(value);\n}\n\nhandleAnswerClick(answer) {\n  const { index, questions } = this.state;\n  const { score, assertions, countScoreAction, name, urlGravatar } = this.props;\n  this.callStopTimer();\n  this.callDisabledDispatch(true);\n  this.callNextBtnDispatch(true);\n  this.setState({\n    renderTimer: false,\n  });\n  if (answer === 'rigth') {\n    checkScore({ index,\n      questions,\n      score,\n      assertions,\n      countScoreAction,\n      name,\n      urlGravatar });\n  }\n}\n\nhandleNextClick(index) {\n  const { history } = this.props;\n  const maxIndex = 4;\n  if (index < maxIndex) {\n    this.setState({\n      index: index + 1,\n      renderTimer: true,\n    });\n    return this.callDisabledDispatch(false);\n  }\n  const { score, name, urlGravatar } = this.props;\n  history.push('/feedback');\n  saveRankingStorage({ name, score, picture: urlGravatar });\n  return this.callDisabledDispatch(false);\n}\n\nrenderNextBtn() {\n  const { index } = this.state;\n  return (\n    <>\n      <p>Respostas desabilitadas!</p>\n      <button\n        type=\"button\"\n        data-testid=\"btn-next\"\n        className=\"nextBtn\"\n        onClick={ () => { this.handleNextClick(index); } }\n      >\n        Next\n      </button>\n    </>\n  );\n}\n\nrender() {\n  const { loading, index, renderTimer } = this.state;\n  const { next } = this.props;\n  return (\n    <>\n      <div className=\"timer-div\">\n        {renderTimer ? <Interval\n          render={ renderTimer }\n          restartTimeFunction={ this.restartTimer }\n        />\n          : null}\n      </div>\n      {loading ? (<span>Caregando...</span>) : this.questionToRender(index) }\n      {next && this.renderNextBtn()}\n    </>\n  );\n}\n}\nQuestions.propTypes = propTypes;\nexport default connect(mapStateToProps, mapDispatchToProps)(Questions);\n","// import React from 'react';\nimport PropTypes from 'prop-types';\nimport { stopTimer, answerDisabled, nextBtn, countScore } from '../redux/actions';\nimport { getLocalStorage } from './localStorage';\n\nexport const checkScore = (informations) => {\n  const { index,\n    questions,\n    score,\n    assertions,\n    countScoreAction } = informations;\n  const POINTS = 10;\n  const EASY = 1;\n  const MEDIUM = 2;\n  const HARD = 3;\n  const timerStorage = getLocalStorage('timer');\n  const { results } = questions;\n  const { difficulty } = results[index];\n  if (difficulty === 'easy') {\n    const totalScore = score + POINTS + (timerStorage * EASY);\n    // saveRankingStorage({ name, score: totalScore, picture: urlGravatar });\n    return countScoreAction({ score: totalScore, assertions: assertions + 1 });\n  }\n  if (difficulty === 'medium') {\n    const totalScore = score + POINTS + (timerStorage * MEDIUM);\n    // saveRankingStorage({ name, score: totalScore, picture: urlGravatar });\n    return countScoreAction({ score: totalScore, assertions: assertions + 1 });\n  }\n  if (difficulty === 'hard') {\n    const totalScore = score + POINTS + (timerStorage * HARD);\n    // saveRankingStorage({ name, score: totalScore, picture: urlGravatar });\n    return countScoreAction({ score: totalScore, assertions: assertions + 1 });\n  }\n};\n\nexport const propTypes = {\n  questions: PropTypes.oneOfType([PropTypes.object]).isRequired,\n  history: PropTypes.oneOfType([PropTypes.object]).isRequired,\n  setDisabled: PropTypes.func.isRequired,\n  disabled: PropTypes.bool.isRequired,\n  stopTimerAction: PropTypes.func.isRequired,\n  setNext: PropTypes.func.isRequired,\n  next: PropTypes.bool.isRequired,\n  score: PropTypes.number.isRequired,\n  assertions: PropTypes.number.isRequired,\n  countScoreAction: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  urlGravatar: PropTypes.string.isRequired,\n\n};\n\nexport const mapStateToProps = (state) => ({\n  questions: state.player.questions,\n  disabled: state.answer.disabled,\n  next: state.answer.nextBtn,\n  score: state.player.score,\n  assertions: state.player.assertions,\n  name: state.player.name,\n  urlGravatar: state.player.gravatarEmail,\n});\n\nexport const mapDispatchToProps = (dispatch) => ({\n  stopTimerAction: (state) => dispatch(stopTimer(state)),\n  setDisabled: (state) => dispatch(answerDisabled(state)),\n  setNext: (state) => dispatch(nextBtn(state)),\n  countScoreAction: (state) => dispatch(countScore(state)),\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Questions from '../components/Questions';\nimport './gamePage.css';\n\nclass GamePage extends React.Component {\n  render() {\n    const { name, urlGravatar, history, score } = this.props;\n    return (\n      <div className=\"game-pag\">\n        <header className=\"game-header\">\n          <img\n            src={ urlGravatar }\n            d=\"identicon\"\n            alt=\"UserImage\"\n            data-testid=\"header-profile-picture\"\n            className=\"user-Image\"\n          />\n          <h3 data-testid=\"header-player-name\" className=\"playerName\">{name}</h3>\n          <p data-testid=\"header-score\" className=\"playerScore\">{score}</p>\n        </header>\n        <section className=\"questions-section\">\n          <Questions history={ history } />\n        </section>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  name: state.player.name,\n  urlGravatar: state.player.gravatarEmail,\n  score: state.player.score,\n});\nGamePage.propTypes = {\n  name: PropTypes.string.isRequired,\n  urlGravatar: PropTypes.string.isRequired,\n  history: PropTypes.oneOfType([PropTypes.object]).isRequired,\n  score: PropTypes.number.isRequired,\n};\nexport default connect(mapStateToProps)(GamePage);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { resetScore } from '../redux/actions';\nimport './feedback.css';\n// import { saveRankingStorage } from '../services/localStorage';\n\nclass Feedback extends React.Component {\n  resetScoreFeedback = () => {\n    const { resetScoreAction } = this.props;\n    resetScoreAction({ score: 0 });\n  };\n\n  render() {\n    const numQuestions = 3;\n    const { imgGravatar, userName, score, assertions } = this.props;\n    return (\n      <div className=\"feedbackPage\">\n        <header className=\"feedback-header\">\n          {/* esse header poderia ser um componente */}\n          <img\n            src={ `${imgGravatar}` }\n            alt=\"userImage\"\n            data-testid=\"header-profile-picture\"\n            className=\"userImg\"\n          />\n          <p data-testid=\"header-player-name\" className=\"userName\">{ userName }</p>\n          <p data-testid=\"header-score\" className=\"userScore\">{ score }</p>\n        </header>\n        <section className=\"feedback-section\">\n          {\n            (assertions < numQuestions)\n              ? <p data-testid=\"feedback-text\" className=\"feedText\">Could be better...</p>\n              : <p data-testid=\"feedback-text\" className=\"feedText\">Well Done!</p>\n          }\n          <p>Placar Final:</p>\n          <p\n            data-testid=\"feedback-total-score\"\n            className=\"feedbackNumber\"\n          >\n            { score }\n          </p>\n          <p>Você acertou:</p>\n          <p\n            data-testid=\"feedback-total-question\"\n            className=\"feedbackNumber\"\n          >\n            {assertions}\n          </p>\n          <Link to=\"/\">\n            <button\n              type=\"submit\"\n              data-testid=\"btn-play-again\"\n              className=\"feedbackBtn\"\n              onClick={ this.resetScoreFeedback }\n            >\n              Play Again\n            </button>\n          </Link>\n          <Link to=\"/ranking\">\n            <button\n              type=\"submit\"\n              data-testid=\"btn-ranking\"\n              className=\"feedbackBtn\"\n            >\n              Ranking\n\n            </button>\n          </Link>\n        </section>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  userName: state.player.name,\n  imgGravatar: state.player.gravatarEmail,\n  score: state.player.score,\n  assertions: state.player.assertions,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  resetScoreAction: (score) => dispatch(resetScore(score)),\n});\n\nFeedback.propTypes = {\n  userName: PropTypes.string.isRequired,\n  imgGravatar: PropTypes.string.isRequired,\n  score: PropTypes.number.isRequired,\n  assertions: PropTypes.number.isRequired,\n  resetScoreAction: PropTypes.func.isRequired,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Feedback);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { getLocalStorage } from '../services/localStorage';\nimport { resetScore } from '../redux/actions';\nimport './ranking.css';\n\nclass Ranking extends React.Component {\n  resetScoreFeedback = () => {\n    const { resetScoreAction } = this.props;\n    resetScoreAction({ score: 0 });\n  };\n\n  render() {\n    const ranking = getLocalStorage('ranking');\n    ranking.sort((a, b) => {\n      const NEGATIVE_ONE = -1;\n      if (a.score > b.score) return NEGATIVE_ONE;\n      if (a.score < b.score) return 1;\n      return 0;\n    });\n    return (\n      <div className=\"rankingPage\">\n        <h1 data-testid=\"ranking-title\" className=\"ranking\">Ranking</h1>\n        <div>\n          <table className=\"listRanking\">\n            <tr className=\"list\">\n              <th className=\"name\">Nome</th>\n              <th className=\"score\">Score</th>\n              <th className=\"avatar\">Avatar</th>\n            </tr>\n            <div className=\"table\">\n              {\n                ranking.map((item, indice) => (\n                  <div key=\"item.name\" className=\"infoPlayer\">\n                    <tr className=\"infoIndividual\">\n                      <th\n                        className=\"nameRanking\"\n                        data-testid={ `player-name-${indice}` }\n                      >\n                        {item.name}\n                      </th>\n                      <th\n                        className=\"scoreRanking\"\n                        data-testid={ `player-score-${indice}` }\n                      >\n                        {item.score}\n                      </th>\n                      <img className=\"imgRanking\" src={ item.picture } alt=\"Foto\" />\n                    </tr>\n                  </div>\n                ))\n              }\n            </div>\n          </table>\n        </div>\n        <Link to=\"/\">\n          <button\n            type=\"submit\"\n            data-testid=\"btn-go-home\"\n            onClick={ this.resetScoreFeedback }\n            className=\"rankingButton\"\n          >\n            Play Again\n\n          </button>\n        </Link>\n      </div>\n    );\n  }\n}\nconst mapDispatchToProps = (dispatch) => ({\n  resetScoreAction: (score) => dispatch(resetScore(score)),\n});\nRanking.propTypes = {\n  resetScoreAction: PropTypes.func.isRequired,\n};\nexport default connect(null, mapDispatchToProps)(Ranking);\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport Login from './pages/Login';\nimport Settings from './pages/Settings';\nimport GamePage from './pages/GamePage';\nimport Feedback from './pages/Feedback';\nimport Ranking from './pages/Ranking';\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n\n      <Switch>\n        <Route exact path=\"/gamePage\" render={ (props) => <GamePage { ...props } /> } />\n        <Route exact path=\"/\" render={ (props) => <Login { ...props } /> } />\n        <Route path=\"/settings\" component={ Settings } />\n        <Route path=\"/feedback\" component={ Feedback } />\n        <Route path=\"/ranking\" component={ Ranking } />\n      </Switch>\n    </div>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const INITIAL_STATE = {\n  name: '',\n  assertions: 0,\n  score: 0,\n  gravatarEmail: '',\n  questions: '',\n};\n\nfunction playerReducer(state = INITIAL_STATE, action) {\n  switch (action.type) {\n  case 'GET_PLAYER':\n    return { ...state,\n      name: action.state.name,\n      gravatarEmail: action.state.gravatar,\n      questions: action.state.questions };\n  case 'SET_SCORE':\n    return { ...state, score: action.state.score, assertions: action.state.assertions };\n  case 'RESET_SCORE':\n    return { score: 0, assertions: 0, gravatarEmail: '', questions: '', name: '' };\n  default:\n    return state;\n  }\n}\nexport default playerReducer;\n","import { USER_TOKEN } from '../actions/index';\n\nexport const INITIAL_STATE = '';\n\nfunction tokenReducer(state = INITIAL_STATE, action) {\n  switch (action.type) {\n  case USER_TOKEN:\n    return action.state;\n  default:\n    return state;\n  }\n}\nexport default tokenReducer;\n","export const INITIAL_STATE = {\n  stop: false,\n  time: 3,\n  render: true,\n};\n\nfunction timeReducer(state = INITIAL_STATE, action) {\n  switch (action.type) {\n  case 'STOP_TIME':\n    return { ...state,\n      stop: action.state };\n  case 'SET_TIME':\n    return { ...state,\n      time: action.state };\n  case 'RENDER_TIME':\n    return { ...state,\n      render: action.state };\n  default:\n    return state;\n  }\n}\nexport default timeReducer;\n","export const INITIAL_STATE = {\n  disabled: false,\n  nextBtn: false,\n};\n\nfunction answerReducer(state = INITIAL_STATE, action) {\n  switch (action.type) {\n  case 'ANSWER_DISABLED':\n    return { ...state,\n      disabled: action.state };\n  case 'CHANGE_NEXT':\n    return { ...state,\n      nextBtn: action.state };\n  default:\n    return state;\n  }\n}\nexport default answerReducer;\n","import { combineReducers } from 'redux';\nimport player from './player';\nimport token from './token';\nimport timer from './timer';\nimport answer from './answer';\n\nconst reducer = combineReducers({ player, token, timer, answer });\n\nexport default reducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport reducer from '../reducers';\n\nconst store = createStore(\n  reducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport default store;\n\nif (window.Cypress) {\n  window.store = store;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './redux/store';\n\nReactDOM.render(\n  <BrowserRouter basename={ process.env.PUBLIC_URL }>\n    <Provider store={ store }>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/trivia.466d153e.png\";","module.exports = __webpack_public_path__ + \"static/media/bip.aa440353.mp3\";"],"sourceRoot":""}