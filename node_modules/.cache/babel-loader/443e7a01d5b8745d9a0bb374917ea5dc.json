{"ast":null,"code":"import { saveLocalStorage } from '../../services/localStorage';\nexport const USER_TOKEN = 'USER_TOKEN';\nexport const login = state => ({\n  type: USER_TOKEN,\n  state\n});\nexport const getPlayer = state => ({\n  type: 'GET_PLAYER',\n  state\n});\nexport const stopTimer = state => ({\n  type: 'STOP_TIME',\n  state\n});\nexport const renderTimer = state => ({\n  type: 'RENDER_TIME',\n  state\n});\nexport const answerDisabled = state => ({\n  type: 'ANSWER_DISABLED',\n  state\n});\nexport const nextBtn = state => ({\n  type: 'CHANGE_NEXT',\n  state\n});\nexport const setTime = state => ({\n  type: 'SET_TIME',\n  state\n});\nexport const countScore = state => ({\n  type: 'SET_SCORE',\n  state\n});\nexport const resetScore = state => ({\n  type: 'RESET_SCORE',\n  state\n});\n\nconst fetchTokenApi = async () => {\n  try {\n    const url = 'https://opentdb.com/api_token.php?command=request';\n    const response = await fetch(url);\n    const token = await response.json();\n    saveLocalStorage('token', token);\n    return token.token;\n  } catch (error) {\n    return error;\n  }\n};\n\nexport function fetchQuestionsApi(state) {\n  return async dispatch => {\n    const token = await fetchTokenApi();\n    dispatch(login(token));\n\n    try {\n      const response = await fetch(`https://opentdb.com/api.php?amount=5&token=${token}`);\n      const data = await response.json();\n      const wrongCode = 3;\n\n      if (data.response_code === wrongCode) {\n        throw new Error();\n      }\n\n      return dispatch(getPlayer({\n        questions: data,\n        name: state.userName,\n        gravatar: state.gravatar\n      }));\n    } catch (error) {\n      const newToken = await fetchTokenApi();\n      const requestQuestions = await fetch(`https://opentdb.com/api.php?amount=5&token=${newToken}`);\n      const questions = await requestQuestions.json();\n      return dispatch(getPlayer({\n        questions,\n        name: state.userName,\n        gravatar: state.gravatar\n      }));\n    }\n  };\n}","map":{"version":3,"names":["saveLocalStorage","USER_TOKEN","login","state","type","getPlayer","stopTimer","renderTimer","answerDisabled","nextBtn","setTime","countScore","resetScore","fetchTokenApi","url","response","fetch","token","json","error","fetchQuestionsApi","dispatch","data","wrongCode","response_code","Error","questions","name","userName","gravatar","newToken","requestQuestions"],"sources":["/home/lucas/Área de Trabalho/Projetos-heroku/sd-018-b-project-trivia-react-redux/src/redux/actions/index.js"],"sourcesContent":["import { saveLocalStorage } from '../../services/localStorage';\n\nexport const USER_TOKEN = 'USER_TOKEN';\nexport const login = (state) => ({ type: USER_TOKEN, state });\nexport const getPlayer = (state) => ({ type: 'GET_PLAYER', state });\nexport const stopTimer = (state) => ({ type: 'STOP_TIME', state });\nexport const renderTimer = (state) => ({ type: 'RENDER_TIME', state });\nexport const answerDisabled = (state) => ({ type: 'ANSWER_DISABLED', state });\nexport const nextBtn = (state) => ({ type: 'CHANGE_NEXT', state });\nexport const setTime = (state) => ({ type: 'SET_TIME', state });\nexport const countScore = (state) => ({ type: 'SET_SCORE', state });\nexport const resetScore = (state) => ({ type: 'RESET_SCORE', state });\nconst fetchTokenApi = async () => {\n  try {\n    const url = 'https://opentdb.com/api_token.php?command=request';\n    const response = await fetch(url);\n    const token = await response.json();\n    saveLocalStorage('token', token);\n    return token.token;\n  } catch (error) {\n    return error;\n  }\n};\n\nexport function fetchQuestionsApi(state) {\n  return async (dispatch) => {\n    const token = await fetchTokenApi();\n    dispatch(login(token));\n    try {\n      const response = await fetch(`https://opentdb.com/api.php?amount=5&token=${token}`);\n      const data = await response.json();\n      const wrongCode = 3;\n      if (data.response_code === wrongCode) {\n        throw new Error();\n      }\n      return dispatch(getPlayer({ questions: data,\n        name: state.userName,\n        gravatar: state.gravatar,\n      }));\n    } catch (error) {\n      const newToken = await fetchTokenApi();\n      const requestQuestions = await fetch(`https://opentdb.com/api.php?amount=5&token=${newToken}`);\n      const questions = await requestQuestions.json();\n      return dispatch(getPlayer({ questions,\n        name: state.userName,\n        gravatar: state.gravatar,\n      }));\n    }\n  };\n}\n"],"mappings":"AAAA,SAASA,gBAAT,QAAiC,6BAAjC;AAEA,OAAO,MAAMC,UAAU,GAAG,YAAnB;AACP,OAAO,MAAMC,KAAK,GAAIC,KAAD,KAAY;EAAEC,IAAI,EAAEH,UAAR;EAAoBE;AAApB,CAAZ,CAAd;AACP,OAAO,MAAME,SAAS,GAAIF,KAAD,KAAY;EAAEC,IAAI,EAAE,YAAR;EAAsBD;AAAtB,CAAZ,CAAlB;AACP,OAAO,MAAMG,SAAS,GAAIH,KAAD,KAAY;EAAEC,IAAI,EAAE,WAAR;EAAqBD;AAArB,CAAZ,CAAlB;AACP,OAAO,MAAMI,WAAW,GAAIJ,KAAD,KAAY;EAAEC,IAAI,EAAE,aAAR;EAAuBD;AAAvB,CAAZ,CAApB;AACP,OAAO,MAAMK,cAAc,GAAIL,KAAD,KAAY;EAAEC,IAAI,EAAE,iBAAR;EAA2BD;AAA3B,CAAZ,CAAvB;AACP,OAAO,MAAMM,OAAO,GAAIN,KAAD,KAAY;EAAEC,IAAI,EAAE,aAAR;EAAuBD;AAAvB,CAAZ,CAAhB;AACP,OAAO,MAAMO,OAAO,GAAIP,KAAD,KAAY;EAAEC,IAAI,EAAE,UAAR;EAAoBD;AAApB,CAAZ,CAAhB;AACP,OAAO,MAAMQ,UAAU,GAAIR,KAAD,KAAY;EAAEC,IAAI,EAAE,WAAR;EAAqBD;AAArB,CAAZ,CAAnB;AACP,OAAO,MAAMS,UAAU,GAAIT,KAAD,KAAY;EAAEC,IAAI,EAAE,aAAR;EAAuBD;AAAvB,CAAZ,CAAnB;;AACP,MAAMU,aAAa,GAAG,YAAY;EAChC,IAAI;IACF,MAAMC,GAAG,GAAG,mDAAZ;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,CAA5B;IACA,MAAMG,KAAK,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAApB;IACAlB,gBAAgB,CAAC,OAAD,EAAUiB,KAAV,CAAhB;IACA,OAAOA,KAAK,CAACA,KAAb;EACD,CAND,CAME,OAAOE,KAAP,EAAc;IACd,OAAOA,KAAP;EACD;AACF,CAVD;;AAYA,OAAO,SAASC,iBAAT,CAA2BjB,KAA3B,EAAkC;EACvC,OAAO,MAAOkB,QAAP,IAAoB;IACzB,MAAMJ,KAAK,GAAG,MAAMJ,aAAa,EAAjC;IACAQ,QAAQ,CAACnB,KAAK,CAACe,KAAD,CAAN,CAAR;;IACA,IAAI;MACF,MAAMF,QAAQ,GAAG,MAAMC,KAAK,CAAE,8CAA6CC,KAAM,EAArD,CAA5B;MACA,MAAMK,IAAI,GAAG,MAAMP,QAAQ,CAACG,IAAT,EAAnB;MACA,MAAMK,SAAS,GAAG,CAAlB;;MACA,IAAID,IAAI,CAACE,aAAL,KAAuBD,SAA3B,EAAsC;QACpC,MAAM,IAAIE,KAAJ,EAAN;MACD;;MACD,OAAOJ,QAAQ,CAAChB,SAAS,CAAC;QAAEqB,SAAS,EAAEJ,IAAb;QACxBK,IAAI,EAAExB,KAAK,CAACyB,QADY;QAExBC,QAAQ,EAAE1B,KAAK,CAAC0B;MAFQ,CAAD,CAAV,CAAf;IAID,CAXD,CAWE,OAAOV,KAAP,EAAc;MACd,MAAMW,QAAQ,GAAG,MAAMjB,aAAa,EAApC;MACA,MAAMkB,gBAAgB,GAAG,MAAMf,KAAK,CAAE,8CAA6Cc,QAAS,EAAxD,CAApC;MACA,MAAMJ,SAAS,GAAG,MAAMK,gBAAgB,CAACb,IAAjB,EAAxB;MACA,OAAOG,QAAQ,CAAChB,SAAS,CAAC;QAAEqB,SAAF;QACxBC,IAAI,EAAExB,KAAK,CAACyB,QADY;QAExBC,QAAQ,EAAE1B,KAAK,CAAC0B;MAFQ,CAAD,CAAV,CAAf;IAID;EACF,CAvBD;AAwBD"},"metadata":{},"sourceType":"module"}