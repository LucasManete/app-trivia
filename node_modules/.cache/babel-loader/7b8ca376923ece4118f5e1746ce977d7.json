{"ast":null,"code":"var _jsxFileName = \"/home/lucas/\\xC1rea de Trabalho/Projetos-heroku/sd-018-b-project-trivia-react-redux/src/pages/Login.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport md5 from 'crypto-js/md5'; // import { saveLocalStorage } from '../services/localStorage';\n\nimport logo from '../trivia.png';\nimport { fetchQuestionsApi } from '../redux/actions';\nimport './login.css';\n\nclass Login extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      email: '',\n      userName: ''\n    };\n\n    this.validadeEmailAndUserName = () => {\n      const {\n        email,\n        userName\n      } = this.state;\n\n      if (email.length > 0 && userName.length > 0) {\n        return false;\n      }\n\n      return true;\n    };\n\n    this.handlePlayClick = async fetchApiQuestions => {\n      const {\n        email,\n        userName\n      } = this.state;\n      const hasEmail = md5(email).toString();\n      const gravatar = `https://www.gravatar.com/avatar/${hasEmail}`;\n      return fetchApiQuestions({\n        gravatar,\n        userName\n      });\n    };\n\n    this.handleChange = _ref => {\n      let {\n        target\n      } = _ref;\n      const {\n        name,\n        value\n      } = target;\n      this.setState({\n        [name]: value\n      });\n    };\n  }\n\n  render() {\n    const {\n      history,\n      fetchApiQuestions\n    } = this.props;\n    const {\n      userName,\n      email\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: logo,\n      className: \"App-logo\",\n      alt: \"logo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"section\", {\n      className: \"login-section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }\n    }, \"Login\"), /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"email-input\",\n      type: \"email\",\n      placeholder: \"Email\",\n      \"data-testid\": \"input-gravatar-email\",\n      required: true,\n      onChange: this.handleChange,\n      value: email,\n      name: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      id: \"UserName\",\n      className: \"name-input\",\n      type: \"text\",\n      placeholder: \"Nome\",\n      \"data-testid\": \"input-player-name\",\n      required: true,\n      onChange: this.handleChange,\n      value: userName,\n      name: \"userName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      \"data-testid\": \"btn-play\",\n      className: \"btn-play\",\n      type: \"button\",\n      onClick: async () => {\n        await this.handlePlayClick(fetchApiQuestions);\n        history.push('/gamePage');\n      },\n      disabled: this.validadeEmailAndUserName(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }, \"Play\"), /*#__PURE__*/React.createElement(Link, {\n      to: \"/settings\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      \"data-testid\": \"btn-settings\",\n      className: \"btn-settings\",\n      type: \"button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 15\n      }\n    }, \"Configura\\xE7\\xF5es\")))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  fetchApiQuestions: state => dispatch(fetchQuestionsApi(state))\n});\n\nLogin.propTypes = {\n  history: PropTypes.oneOfType([PropTypes.object]).isRequired,\n  fetchApiQuestions: PropTypes.func.isRequired\n};\nexport default connect(null, mapDispatchToProps)(Login);","map":{"version":3,"names":["React","PropTypes","connect","Link","md5","logo","fetchQuestionsApi","Login","Component","state","email","userName","validadeEmailAndUserName","length","handlePlayClick","fetchApiQuestions","hasEmail","toString","gravatar","handleChange","target","name","value","setState","render","history","props","push","mapDispatchToProps","dispatch","propTypes","oneOfType","object","isRequired","func"],"sources":["/home/lucas/Área de Trabalho/Projetos-heroku/sd-018-b-project-trivia-react-redux/src/pages/Login.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport md5 from 'crypto-js/md5';\n// import { saveLocalStorage } from '../services/localStorage';\nimport logo from '../trivia.png';\nimport { fetchQuestionsApi } from '../redux/actions';\nimport './login.css';\n\nclass Login extends React.Component {\n    state = {\n      email: '',\n      userName: '',\n    };\n\n  validadeEmailAndUserName = () => {\n    const { email, userName } = this.state;\n    if (email.length > 0 && userName.length > 0) {\n      return false;\n    } return true;\n  }\n\n  handlePlayClick = async (fetchApiQuestions) => {\n    const { email, userName } = this.state;\n    const hasEmail = md5(email).toString();\n    const gravatar = `https://www.gravatar.com/avatar/${hasEmail}`;\n    return fetchApiQuestions({ gravatar, userName });\n  }\n\n  handleChange = ({ target }) => {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  }\n\n  render() {\n    const { history, fetchApiQuestions } = this.props;\n    const { userName, email } = this.state;\n    return (\n      <div className=\"App-header\">\n        <img src={ logo } className=\"App-logo\" alt=\"logo\" />\n        <section className=\"login-section\">\n\n          <h1>Login</h1>\n          <form>\n            <input\n              className=\"email-input\"\n              type=\"email\"\n              placeholder=\"Email\"\n              data-testid=\"input-gravatar-email\"\n              required\n              onChange={ this.handleChange }\n              value={ email }\n              name=\"email\"\n            />\n            <input\n              id=\"UserName\"\n              className=\"name-input\"\n              type=\"text\"\n              placeholder=\"Nome\"\n              data-testid=\"input-player-name\"\n              required\n              onChange={ this.handleChange }\n              value={ userName }\n              name=\"userName\"\n            />\n            <button\n              data-testid=\"btn-play\"\n              className=\"btn-play\"\n              type=\"button\"\n              onClick={ async () => {\n                await this.handlePlayClick(fetchApiQuestions);\n                history.push('/gamePage');\n              } }\n              disabled={ this.validadeEmailAndUserName() }\n            >\n              Play\n            </button>\n            <Link to=\"/settings\">\n              <button\n                data-testid=\"btn-settings\"\n                className=\"btn-settings\"\n                type=\"button\"\n              >\n                Configurações\n              </button>\n            </Link>\n          </form>\n        </section>\n\n      </div>\n    );\n  }\n}\nconst mapDispatchToProps = (dispatch) => ({\n  fetchApiQuestions: (state) => dispatch(fetchQuestionsApi(state)) });\n\nLogin.propTypes = {\n  history: PropTypes.oneOfType([PropTypes.object]).isRequired,\n  fetchApiQuestions: PropTypes.func.isRequired,\n};\n\nexport default connect(null, mapDispatchToProps)(Login);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}