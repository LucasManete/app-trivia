{"ast":null,"code":"// import React from 'react';\nimport PropTypes from 'prop-types';\nimport { stopTimer, answerDisabled, nextBtn, countScore } from '../redux/actions';\nimport { getLocalStorage } from './localStorage';\nexport const checkScore = informations => {\n  const {\n    index,\n    questions,\n    score,\n    assertions,\n    countScoreAction\n  } = informations;\n  const POINTS = 10;\n  const EASY = 1;\n  const MEDIUM = 2;\n  const HARD = 3;\n  const timerStorage = getLocalStorage('timer');\n  const {\n    results\n  } = questions;\n  const {\n    difficulty\n  } = results[index];\n\n  if (difficulty === 'easy') {\n    const totalScore = score + POINTS + timerStorage * EASY; // saveRankingStorage({ name, score: totalScore, picture: urlGravatar });\n\n    return countScoreAction({\n      score: totalScore,\n      assertions: assertions + 1\n    });\n  }\n\n  if (difficulty === 'medium') {\n    const totalScore = score + POINTS + timerStorage * MEDIUM; // saveRankingStorage({ name, score: totalScore, picture: urlGravatar });\n\n    return countScoreAction({\n      score: totalScore,\n      assertions: assertions + 1\n    });\n  }\n\n  if (difficulty === 'hard') {\n    const totalScore = score + POINTS + timerStorage * HARD; // saveRankingStorage({ name, score: totalScore, picture: urlGravatar });\n\n    return countScoreAction({\n      score: totalScore,\n      assertions: assertions + 1\n    });\n  }\n};\nexport const propTypes = {\n  questions: PropTypes.oneOfType([PropTypes.object]).isRequired,\n  history: PropTypes.oneOfType([PropTypes.object]).isRequired,\n  setDisabled: PropTypes.func.isRequired,\n  disabled: PropTypes.bool.isRequired,\n  stopTimerAction: PropTypes.func.isRequired,\n  setNext: PropTypes.func.isRequired,\n  next: PropTypes.bool.isRequired,\n  score: PropTypes.number.isRequired,\n  assertions: PropTypes.number.isRequired,\n  countScoreAction: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  urlGravatar: PropTypes.string.isRequired\n};\nexport const mapStateToProps = state => ({\n  questions: state.player.questions,\n  disabled: state.answer.disabled,\n  next: state.answer.nextBtn,\n  score: state.player.score,\n  assertions: state.player.assertions,\n  name: state.player.name,\n  urlGravatar: state.player.gravatarEmail\n});\nexport const mapDispatchToProps = dispatch => ({\n  stopTimerAction: state => dispatch(stopTimer(state)),\n  setDisabled: state => dispatch(answerDisabled(state)),\n  setNext: state => dispatch(nextBtn(state)),\n  countScoreAction: state => dispatch(countScore(state))\n});","map":{"version":3,"names":["PropTypes","stopTimer","answerDisabled","nextBtn","countScore","getLocalStorage","checkScore","informations","index","questions","score","assertions","countScoreAction","POINTS","EASY","MEDIUM","HARD","timerStorage","results","difficulty","totalScore","propTypes","oneOfType","object","isRequired","history","setDisabled","func","disabled","bool","stopTimerAction","setNext","next","number","name","string","urlGravatar","mapStateToProps","state","player","answer","gravatarEmail","mapDispatchToProps","dispatch"],"sources":["/home/lucas/Área de Trabalho/Projetos-heroku/sd-018-b-project-trivia-react-redux/src/services/helpers.js"],"sourcesContent":["// import React from 'react';\nimport PropTypes from 'prop-types';\nimport { stopTimer, answerDisabled, nextBtn, countScore } from '../redux/actions';\nimport { getLocalStorage } from './localStorage';\n\nexport const checkScore = (informations) => {\n  const { index,\n    questions,\n    score,\n    assertions,\n    countScoreAction } = informations;\n  const POINTS = 10;\n  const EASY = 1;\n  const MEDIUM = 2;\n  const HARD = 3;\n  const timerStorage = getLocalStorage('timer');\n  const { results } = questions;\n  const { difficulty } = results[index];\n  if (difficulty === 'easy') {\n    const totalScore = score + POINTS + (timerStorage * EASY);\n    // saveRankingStorage({ name, score: totalScore, picture: urlGravatar });\n    return countScoreAction({ score: totalScore, assertions: assertions + 1 });\n  }\n  if (difficulty === 'medium') {\n    const totalScore = score + POINTS + (timerStorage * MEDIUM);\n    // saveRankingStorage({ name, score: totalScore, picture: urlGravatar });\n    return countScoreAction({ score: totalScore, assertions: assertions + 1 });\n  }\n  if (difficulty === 'hard') {\n    const totalScore = score + POINTS + (timerStorage * HARD);\n    // saveRankingStorage({ name, score: totalScore, picture: urlGravatar });\n    return countScoreAction({ score: totalScore, assertions: assertions + 1 });\n  }\n};\n\nexport const propTypes = {\n  questions: PropTypes.oneOfType([PropTypes.object]).isRequired,\n  history: PropTypes.oneOfType([PropTypes.object]).isRequired,\n  setDisabled: PropTypes.func.isRequired,\n  disabled: PropTypes.bool.isRequired,\n  stopTimerAction: PropTypes.func.isRequired,\n  setNext: PropTypes.func.isRequired,\n  next: PropTypes.bool.isRequired,\n  score: PropTypes.number.isRequired,\n  assertions: PropTypes.number.isRequired,\n  countScoreAction: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  urlGravatar: PropTypes.string.isRequired,\n\n};\n\nexport const mapStateToProps = (state) => ({\n  questions: state.player.questions,\n  disabled: state.answer.disabled,\n  next: state.answer.nextBtn,\n  score: state.player.score,\n  assertions: state.player.assertions,\n  name: state.player.name,\n  urlGravatar: state.player.gravatarEmail,\n});\n\nexport const mapDispatchToProps = (dispatch) => ({\n  stopTimerAction: (state) => dispatch(stopTimer(state)),\n  setDisabled: (state) => dispatch(answerDisabled(state)),\n  setNext: (state) => dispatch(nextBtn(state)),\n  countScoreAction: (state) => dispatch(countScore(state)),\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}